buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.5.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'

jar {
    baseName = 'aop-with-spring'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    useLoadTimeWeaving = project.hasProperty('useLoadTimeWeaving') ? Boolean.valueOf(useLoadTimeWeaving) : true
}

configurations {
    aop
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-aop")

    aop("org.aspectj:aspectjweaver")
    aop("org.springframework:spring-instrument")

    compile("org.springframework:spring-aspects")
    compile("org.springframework:spring-tx")
    compile("org.springframework:spring-jdbc")
    compile("com.h2database:h2")

    compile("org.codehaus.groovy:groovy-all")
    compile("com.fasterxml.jackson.core:jackson-databind")

    testCompile("junit:junit")
}

task copyAopLibs(type: Copy) {
    into "src/main/resources/aspectj"
    from configurations.aop
}

bootRun {
    if (useLoadTimeWeaving) {
        jvmArgs = configurations.aop.collect {File f -> "-javaagent:${f.getAbsolutePath()}" }
    }
    jvmArgs += [ "-DuseLoadTimeWeaving=${useLoadTimeWeaving}" ]
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
